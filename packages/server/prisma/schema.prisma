// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/__generated__/prisma-client-js"
}

generator fabbrica {
  provider = "prisma-fabbrica"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 販売会社
model Shop {
  id                   String               @id @default(uuid())
  name                 String
  description          String
  partnerManufacturers ShopOnManufacturer[]
  orders               Order[]
}

// 製造会社
model Manufacturer {
  id               String                         @id @default(uuid())
  name             String
  description      String
  handlingProducts ManufacturerHandlingProducts[]
  partnerShops     ShopOnManufacturer[]
  orders           Order[]
}

// 販売会社-製造会社 中間テーブル
model ShopOnManufacturer {
  shop           Shop         @relation(fields: [shopId], references: [id])
  shopId         String
  manufacturer   Manufacturer @relation(fields: [manufacturerId], references: [id])
  manufacturerId String

  @@id([shopId, manufacturerId])
}

// 商品
model Product {
  id            String                         @id @default(uuid())
  name          String                         @unique
  description   String
  categories    ProductOnProductCategory[]
  manufacturers ManufacturerHandlingProducts[]
  orderItem     OrderItem[]
}

// 取り扱い商品（製造会社）
model ManufacturerHandlingProducts {
  id             Int          @id @default(autoincrement())
  stock          Int
  price          Int
  product        Product      @relation(fields: [productId], references: [id])
  productId      String
  manufacturer   Manufacturer @relation(fields: [manufacturerId], references: [id])
  manufacturerId String
}

// 商品カテゴリ
model ProductCategory {
  id       String                     @id @default(uuid())
  name     String                     @unique
  products ProductOnProductCategory[]
}

// 商品-商品カテゴリ 中間テーブル
model ProductOnProductCategory {
  product    Product         @relation(fields: [productId], references: [id])
  productId  String
  category   ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId String

  @@id([productId, categoryId])
}

// 発注書
model Order {
  id             String       @id @default(uuid())
  shop           Shop         @relation(fields: [shopId], references: [id])
  shopId         String
  manufacturer   Manufacturer @relation(fields: [manufacturerId], references: [id])
  manufacturerId String
  items          OrderItem[]
  approved       Boolean      @default(false) // 承認済みかどうか
  orderAt        DateTime     @default(now()) // 発注日
}

// 発注書アイテム
model OrderItem {
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int // 個数

  @@id([productId, orderId])
}
